!function e(t,o,r){function n(l,c){if(!o[l]){if(!t[l]){var i="function"==typeof require&&require;if(!c&&i)return i(l,!0);if(s)return s(l,!0);var a=new Error("Cannot find module '"+l+"'");throw a.code="MODULE_NOT_FOUND",a}var u=o[l]={exports:{}};t[l][0].call(u.exports,function(e){var o=t[l][1][e];return n(o?o:e)},u,u.exports,e,t,o,r)}return o[l].exports}for(var s="function"==typeof require&&require,l=0;l<r.length;l++)n(r[l]);return n}({1:[function(e,t,o){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}var n=e("./directives"),s=r(n),l=e("./services"),c=r(l),i=angular.module("warframeTrade",["ngAnimate","ngTouch","ui.bootstrap","ui.router","ncy-angular-breadcrumb","ngScrollable",s["default"],c["default"]]),a=!1;i.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("root",{url:"/home",views:{"":{template:"<root></root>"},"navbar@root":{template:"<custom-nav-bar user='userSession'></custom-nav-bar>",controller:["$scope","userSession",function(e,t){e.userSession=t}]},"body@root":{template:"<home user='userSession' children='children'></home>",controller:["$scope","userSession","children",function(e,t,o){e.userSession=t,e.children=o}]}},resolve:{userSession:["userSessionService",function(e){return e.getUserSession()}],children:["itemCategoryService",function(e,t){return e.getChildren("/Item")}]},ncyBreadcrumb:{label:"Home"}}).state("root.mods",{url:"/mods",views:{breadcrumb:{template:"<div ncy-breadcrumb></div>"},body:{templateUrl:"/ng/templates/root-mods-body-template.html"},"hierarchy@root.mods":{template:"<mods-hierarchy user='userSession' children='children'></mods-hierarchy>",controller:["$scope","userSession","children",function(e,t,o){e.userSession=t,e.children=o}]}},resolve:{children:["itemCategoryService",function(e){return e.getChildren("/Item/Mods")}]},ncyBreadcrumb:{label:"Mods"}}).state("root.mods.mode",{url:"/:mode",params:{level:"Mode"},views:{hierarchy:{template:"<mods-hierarchy user='userSession' children='children' getmodelabel='getModeLabel'></mods-hierarchy>",controller:["$scope","$stateParams","userSession","children",function(e,t,o,r){e.userSession=o,e.children=r,e.getModeLabel=function(){return t.mode}}]},items:{controller:["$scope",function(e){e.ncyBreadcrumbIgnore=!0}]}},resolve:{children:["itemCategoryService","$stateParams",function(e,t){return e.getChildren("/Item/Mods/"+t.mode)}]},ncyBreadcrumb:{label:"{{ getModeLabel() }}"}}).state("root.mods.type",{url:"/:mode/:type",params:{level:"Type"},views:{hierarchy:{template:"<mods-hierarchy user='userSession' children='children' getmodelabel='getModeLabel' gettypelabel='getTypeLabel'></mods-hierarchy>",controller:["$scope","$stateParams","userSession","children",function(e,t,o,r){e.userSession=o,e.children=r,e.getModeLabel=function(){return t.mode},e.getTypeLabel=function(){return t.type}}]},items:{template:"<mods-items user='userSession' children='children'></mods-items>",controller:["$scope","userSession","children",function(e,t,o){e.userSession=t,e.children=o,e.ncyBreadcrumbIgnore=!0}]}},resolve:{children:["itemCategoryService","$stateParams",function(e,t){return e.getChildren("/Item/Mods/"+t.mode+"/"+t.type)}]},ncyBreadcrumb:{parent:"root.mods.mode",label:"{{ getTypeLabel() }}"}}).state("root.mods.companion",{url:"/:mode/:type/:companion",params:{level:"Companion"},views:{hierarchy:{template:"<mods-hierarchy user='userSession' children='children' getmodelabel='getModeLabel' gettypelabel='getTypeLabel' getcompanionlabel='getCompanionLabel'></mods-hierarchy>",controller:["$scope","$stateParams","userSession","children",function(e,t,o,r){e.userSession=o,e.children=r,e.getModeLabel=function(){return t.mode},e.getTypeLabel=function(){return t.type},e.getCompanionLabel=function(){return t.companion}}]},items:{template:"<mods-items user='userSession' children='children'></mods-items>",controller:["$scope","userSession",function(e,t,o){e.userSession=t,e.children=o,e.ncyBreadcrumbIgnore=!0}]}},resolve:{children:["itemCategoryService","$stateParams",function(e,t){return e.getChildren("/Item/Mods/"+t.mode+"/"+t.type+"/"+t.companion)}]},ncyBreadcrumb:{parent:"root.mods.type",label:"{{ getCompanionLabel() }}"}})}]),i.run(["$rootScope","$state","$stateParams","$urlRouter",function(e,t,o,r){e.$state=t,e.$stateParams=o,e.$on("$stateChangeStart",function(e,t,o,r,n){a&&(console.log("state change start:"),console.log("from state:"),console.log(r),console.log(n),console.log("to state:"),console.log(t),console.log(o),console.log("\n\n\n"))})}])},{"./directives":6,"./services":12}],2:[function(e,t,o){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(o,"__esModule",{value:!0}),o.newPostController=o.logInController=o.modsHierarchyController=o.modsItemsController=o.homeController=o.customNavBarController=o.rootController=void 0;var n=e("./root/rootController"),s=r(n),l=e("./customNavBar/customNavBarController"),c=r(l),i=e("./home/homeController"),a=r(i),u=e("./modsItems/modsItemsController"),d=r(u),m=e("./modsHierarchy/modsHierarchyController"),p=r(m),h=e("./logIn/logInController"),f=r(h),g=e("./newPost/newPostController"),v=r(g);o.rootController=s["default"],o.customNavBarController=c["default"],o.homeController=a["default"],o.modsItemsController=d["default"],o.modsHierarchyController=p["default"],o.logInController=f["default"],o.newPostController=v["default"]},{"./customNavBar/customNavBarController":3,"./home/homeController":5,"./logIn/logInController":7,"./modsHierarchy/modsHierarchyController":8,"./modsItems/modsItemsController":9,"./newPost/newPostController":10,"./root/rootController":11}],3:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope","$http","$uibModal",function(e,t,o){var r=this,n=!1;e.ctrl=this,this.scope=e,n&&(console.log("scope:"),console.log(this.scope));var s={};this.newPost=function(){s.user=r.scope.user._id;var e=o.open({template:"<new-post item='item' cancel='cancel'></new-post>",controller:["$scope",function(t){t.item=s,t.cancel=e.dismiss}],backdrop:"static"})},this.logIn=function(){o.open({template:"<log-in></log-in>"})},this.logOut=function(){r.scope.user&&t.get("/api/logOut").success(function(e){n&&console.log("LogOut Successful!"),r.scope.user=e.user}).error(function(e){n&&console.log("LogOut Failed!")})}}];o["default"]=r},{}],4:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=function(){return{restrict:"AE",controller:"rootController",templateUrl:"/ng/directives/root/rootView.html",scope:{user:"=user",children:"=children"}}},n=function(){return{restrict:"AE",controller:"customNavBarController",templateUrl:"/ng/directives/customNavBar/customNavBarView.html",scope:{user:"=user",children:"=children"}}},s=function(){return{restrict:"AE",controller:"homeController",templateUrl:"/ng/directives/home/homeView.html",scope:{user:"=user",children:"=children"}}},l=function(){return{restrict:"AE",controller:"modsItemsController",templateUrl:"/ng/directives/modsItems/modsItemsView.html",scope:{user:"=user",children:"=children"}}},c=function(){return{restrict:"AE",controller:"modsHierarchyController",templateUrl:"/ng/directives/modsHierarchy/modsHierarchyView.html",scope:{user:"=user",children:"=children",getModeLabel:"=getmodelabel",getTypeLabel:"=gettypelabel",getCompanionLabel:"=getcompanionlabel"}}},i=function(){return{restrict:"AE",controller:"logInController",templateUrl:"/ng/directives/logIn/logInView.html"}},a=function(){return{restrict:"AE",controller:"newPostController",templateUrl:"/ng/directives/newPost/newPostView.html",scope:{newItem:"=item",cancel:"=cancel"}}};o.root=r,o.customNavBar=n,o.home=s,o.modsItems=l,o.modsHierarchy=c,o.logIn=i,o.newPost=a},{}],5:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope",function(e){this.scope=e,this.scope.tempList=[];for(var t=0;100>t;++t)this.scope.tempList.push("Temp List Item "+t)}];o["default"]=r},{}],6:[function(e,t,o){"use strict";function r(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t["default"]=e,t}Object.defineProperty(o,"__esModule",{value:!0});var n=e("./controllers"),s=r(n),l=e("./directives"),c=r(l);!function(e){var t=e.module("warframeDirectives",[]);for(var o in c)t.directive(o,c[o]);for(var r in s)t.controller(r,s[r])}(window.angular),o["default"]="warframeDirectives"},{"./controllers":2,"./directives":4}],7:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope",function(e){e.ctrl=this,this.scope=e}];o["default"]=r},{}],8:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope","$state",function(e,t){e.ctrl=this,this.scope=e;var o=!1,r={};this.toNextState=function(e){var o=t.params;o[r.value.toLowerCase()]=e,delete o.level,t.go("root.mods."+r.value.toLowerCase(),o)};var n=function(){var n=t.params;switch(n.level){case"Mode":r.value="Type";break;case"Type":r.value="Companion";break;case"Companion":r.value="placeholderstate";break;default:r.value="Mode"}o&&(console.log("inside reloadDirective"),console.log("current state: "+t.current.name),console.log(e)),o&&(console.log("stateParams:"),console.log(n)),e.options=e.children,o&&(console.log("nextLevel:"),console.log(r),console.log("state:"),console.log(t),console.log("scope:"),console.log(e),console.log("\n\n\n"))};n()}];o["default"]=r},{}],9:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope","$stateParams",function(e,t){e.ctrl=this,this.scope=e;this.scope.tempListItems=[];for(var o=0;5>o;++o)this.scope.tempListItems.push("tempListItem"+(o+1))}];o["default"]=r},{}],10:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope","$http",function(e,t){var o=this,r=!1;e.ctrl=this,this.scope=e,this.scope.transactions=["Deal","Auction"],this.scope.categories=["Mods","Sortie Weapons","Void Parts","Keys","Arcanes"],this.scope.datePicker={format:"yyyy-MM-dd",options:{minDate:new Date,startingDay:1}},this.submitPost=function(){var e=o.scope.newItem.category._id;o.scope.newItem.category.name=e,o.scope.newItem.category.parent=null,o.scope.newItem.category.ancestors=null,r&&console.log(o.scope),t.post("/api/item/new",o.scope.newItem,{headers:{"Content-Type":"application/json"}}).then(function(e){r&&(console.log("newPostController, submitPost success!"),console.log(e)),o.cancelPost()},function(e){r&&(console.log("newPostController, submitPost error!"),console.log(e))})},this.cancelPost=function(){return o.scope.cancel()},this.scope.newItem.expiry||(this.scope.newItem.expiry=(new Date).setDate((new Date).getDate()+3)),this.scope.newItem.transaction||(this.scope.newItem.transaction=this.scope.transactions[0]),this.scope.newItem.category||(this.scope.newItem.category={_id:this.scope.categories[0]})}];o["default"]=r},{}],11:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$scope",function(e){e.ctrl=this,this.scope=e}];o["default"]=r},{}],12:[function(e,t,o){"use strict";function r(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t["default"]=e,t}var n=e("./services"),s=r(n);!function(e){var t=e.module("warframeServices",[]);for(var o in s)t.service(o,s[o])}(window.angular),t.exports="warframeServices"},{"./services":14}],13:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$http","$q",function(e,t){var o={};return{getCategory:function(t){return o[t]&&void 0!==o[t].category?o[t].category:e.get("/api/category"+t).then(function(e){return o[t]||(o[t]={}),o[t].category=e.data.category,e.data.category},function(e){return null})},getChildren:function(t){return o[t]&&void 0!==o[t].children?o[t].children:e.get("/api/category/children"+t).then(function(e){return o[t]||(o[t]={}),e.data.children&&0!=e.data.children.length?(o[t].children=e.data.children.map(function(e){return e.name}),o[t].children):(o[t].children=null,null)},function(e){return null})}}}];o["default"]=r},{}],14:[function(e,t,o){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(o,"__esModule",{value:!0}),o.itemCategoryService=o.userSessionService=void 0;var n=e("./userSessionService"),s=r(n),l=e("./itemCategoryService"),c=r(l);o.userSessionService=s["default"],o.itemCategoryService=c["default"]},{"./itemCategoryService":13,"./userSessionService":15}],15:[function(e,t,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var r=["$http","$q",function(e,t){return{getUserSession:function(){return e.get("/api/me").then(function(e){return e.data.user},function(e){return null})}}}];o["default"]=r},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
