!function e(t,o,r){function n(i,c){if(!o[i]){if(!t[i]){var l="function"==typeof require&&require;if(!c&&l)return l(i,!0);if(s)return s(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var u=o[i]={exports:{}};t[i][0].call(u.exports,function(e){var o=t[i][1][e];return n(o?o:e)},u,u.exports,e,t,o,r)}return o[i].exports}for(var s="function"==typeof require&&require,i=0;i<r.length;i++)n(r[i]);return n}({1:[function(e,t,o){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}var n=e("./directives"),s=r(n),i=e("./services"),c=r(i),l=angular.module("warframeTrade",["ngAnimate","ngTouch","ui.bootstrap","ui.router","ncy-angular-breadcrumb","ngScrollable",s["default"],c["default"]]),a=!1;l.config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/home"),e.state("root",{url:"/home",views:{"":{template:"<root></root>"},"navbar@root":{template:"<custom-nav-bar user='userSession'></custom-nav-bar>",controller:["$scope","userSession",function(e,t){e.userSession=t}]},"body@root":{template:"<home user='userSession' children='children'></home>",controller:["$scope","userSession","children",function(e,t,o){e.userSession=t,e.children=o}]}},resolve:{userSession:["userSessionService",function(e){return e.getUserSession()}],children:["itemCategoryService",function(e,t){return e.getChildren("/Item")}]},ncyBreadcrumb:{label:"Home"}}).state("root.mods",{url:"/mods",views:{breadcrumb:{template:"<div ncy-breadcrumb></div>"},body:{templateUrl:"/ng/templates/root-mods-body-template.html"},"hierarchy@root.mods":{template:"<mods-hierarchy user='userSession' children='children'></mods-hierarchy>",controller:["$scope","userSession","children",function(e,t,o){e.userSession=t,e.children=o}]}},resolve:{children:["itemCategoryService",function(e){return e.getChildren("/Item/Mods")}]},ncyBreadcrumb:{label:"Mods"}}).state("root.mods.mode",{url:"/:mode",params:{level:"Mode"},views:{hierarchy:{template:"<mods-hierarchy user='userSession' children='children' getmodelabel='getModeLabel'></mods-hierarchy>",controller:["$scope","$stateParams","userSession","children",function(e,t,o,r){e.userSession=o,e.children=r,e.getModeLabel=function(){return t.mode}}]},items:{controller:["$scope",function(e){e.ncyBreadcrumbIgnore=!0}]}},resolve:{children:["itemCategoryService","$stateParams",function(e,t){return e.getChildren("/Item/Mods/"+t.mode)}]},ncyBreadcrumb:{label:"{{ getModeLabel() }}"}}).state("root.mods.type",{url:"/:mode/:type",params:{level:"Type"},views:{hierarchy:{template:"<mods-hierarchy user='userSession' children='children' getmodelabel='getModeLabel' gettypelabel='getTypeLabel'></mods-hierarchy>",controller:["$scope","$stateParams","userSession","children",function(e,t,o,r){e.userSession=o,e.children=r,e.getModeLabel=function(){return t.mode},e.getTypeLabel=function(){return t.type}}]},items:{template:"<mods-items user='userSession' children='children'></mods-items>",controller:["$scope","userSession","children",function(e,t,o){e.userSession=t,e.children=o,e.ncyBreadcrumbIgnore=!0}]}},resolve:{children:["itemCategoryService","$stateParams",function(e,t){return e.getChildren("/Item/Mods/"+t.mode+"/"+t.type)}]},ncyBreadcrumb:{parent:"root.mods.mode",label:"{{ getTypeLabel() }}"}}).state("root.mods.companion",{url:"/:mode/:type/:companion",params:{level:"Companion"},views:{hierarchy:{template:"<mods-hierarchy user='userSession' children='children' getmodelabel='getModeLabel' gettypelabel='getTypeLabel' getcompanionlabel='getCompanionLabel'></mods-hierarchy>",controller:["$scope","$stateParams","userSession","children",function(e,t,o,r){e.userSession=o,e.children=r,e.getModeLabel=function(){return t.mode},e.getTypeLabel=function(){return t.type},e.getCompanionLabel=function(){return t.companion}}]},items:{template:"<mods-items user='userSession' children='children'></mods-items>",controller:["$scope","userSession",function(e,t,o){e.userSession=t,e.children=o,e.ncyBreadcrumbIgnore=!0}]}},resolve:{children:["itemCategoryService","$stateParams",function(e,t){return e.getChildren("/Item/Mods/"+t.mode+"/"+t.type+"/"+t.companion)}]},ncyBreadcrumb:{parent:"root.mods.type",label:"{{ getCompanionLabel() }}"}})}]),l.run(["$rootScope","$state","$stateParams","$urlRouter",function(e,t,o,r){e.$state=t,e.$stateParams=o,e.$on("$stateChangeStart",function(e,t,o,r,n){a&&(console.log("state change start:"),console.log("from state:"),console.log(r),console.log(n),console.log("to state:"),console.log(t),console.log(o),console.log("\n\n\n"))})}])},{"./directives":6,"./services":12}],2:[function(e,t,o){"use strict";o.rootController=e("./root/rootController.js"),o.customNavBarController=e("./customNavBar/customNavBarController.js"),o.homeController=e("./home/homeController.js"),o.modsItemsController=e("./modsItems/modsItemsController.js"),o.modsHierarchyController=e("./modsHierarchy/modsHierarchyController.js"),o.logInController=e("./logIn/logInController.js"),o.newPostController=e("./newPost/newPostController.js")},{"./customNavBar/customNavBarController.js":3,"./home/homeController.js":5,"./logIn/logInController.js":7,"./modsHierarchy/modsHierarchyController.js":8,"./modsItems/modsItemsController.js":9,"./newPost/newPostController.js":10,"./root/rootController.js":11}],3:[function(e,t,o){"use strict";t.exports=["$scope","$http","$uibModal",function(e,t,o){var r=!1;e.ctrl=this,this.scope=e,r&&(console.log("scope:"),console.log(this.scope));var n={};this.newPost=function(){n.user=this.scope.user._id;var e=o.open({template:"<new-post item='item' cancel='cancel'></new-post>",controller:["$scope",function(t){t.item=n,t.cancel=e.dismiss}.bind(this)],backdrop:"static"})},this.logIn=function(){o.open({template:"<log-in></log-in>"})},this.logOut=function(){this.scope.user&&t.get("/api/logOut").success(function(e){r&&console.log("LogOut Successful!"),this.scope.user=e.user}.bind(this)).error(function(e){r&&console.log("LogOut Failed!")})}}]},{}],4:[function(e,t,o){"use strict";o.root=function(){return{restrict:"AE",controller:"rootController",templateUrl:"/ng/directives/root/rootView.html",scope:{user:"=user",children:"=children"}}},o.customNavBar=function(){return{restrict:"AE",controller:"customNavBarController",templateUrl:"/ng/directives/customNavBar/customNavBarView.html",scope:{user:"=user",children:"=children"}}},o.home=function(){return{restrict:"AE",controller:"homeController",templateUrl:"/ng/directives/home/homeView.html",scope:{user:"=user",children:"=children"}}},o.modsItems=function(){return{restrict:"AE",controller:"modsItemsController",templateUrl:"/ng/directives/modsItems/modsItemsView.html",scope:{user:"=user",children:"=children"}}},o.modsHierarchy=function(){return{restrict:"AE",controller:"modsHierarchyController",templateUrl:"/ng/directives/modsHierarchy/modsHierarchyView.html",scope:{user:"=user",children:"=children",getModeLabel:"=getmodelabel",getTypeLabel:"=gettypelabel",getCompanionLabel:"=getcompanionlabel"}}},o.logIn=function(){return{restrict:"AE",controller:"logInController",templateUrl:"/ng/directives/logIn/logInView.html"}},o.newPost=function(){return{restrict:"AE",controller:"newPostController",templateUrl:"/ng/directives/newPost/newPostView.html",scope:{newItem:"=item",cancel:"=cancel"}}}},{}],5:[function(e,t,o){"use strict";t.exports=["$scope",function(e){this.scope=e,this.scope.tempList=[];for(var t=0;100>t;++t)this.scope.tempList.push("Temp List Item "+t)}]},{}],6:[function(e,t,o){"use strict";!function r(t){var r=t.module("warframeDirectives",[]),o=e("./directives");for(var n in o)r.directive(n,o[n]);var s=e("./controllers");for(var n in s)r.controller(n,s[n])}(window.angular),t.exports="warframeDirectives"},{"./controllers":2,"./directives":4}],7:[function(e,t,o){"use strict";t.exports=["$scope",function(e){e.ctrl=this,this.scope=e}]},{}],8:[function(e,t,o){"use strict";t.exports=["$scope","$state",function(e,t){function o(){var o=t.params;switch(o.level){case"Mode":n.value="Type";break;case"Type":n.value="Companion";break;case"Companion":n.value="placeholderstate";break;default:n.value="Mode"}r&&(console.log("inside reloadDirective"),console.log("current state: "+t.current.name),console.log(e)),r&&(console.log("stateParams:"),console.log(o)),e.options=e.children,r&&(console.log("nextLevel:"),console.log(n),console.log("state:"),console.log(t),console.log("scope:"),console.log(e),console.log("\n\n\n"))}e.ctrl=this,this.scope=e;var r=!1,n={};this.toNextState=function(e){var o=t.params;o[n.value.toLowerCase()]=e,delete o.level,t.go("root.mods."+n.value.toLowerCase(),o)},o()}]},{}],9:[function(e,t,o){"use strict";t.exports=["$scope","$stateParams",function(e,t){e.ctrl=this,this.scope=e;this.scope.tempListItems=[];for(var o=0;5>o;++o)this.scope.tempListItems.push("tempListItem"+(o+1))}]},{}],10:[function(e,t,o){"use strict";t.exports=["$scope","$http",function(e,t){var o=!1;e.ctrl=this,this.scope=e,this.scope.transactions=["Deal","Auction"],this.scope.categories=["Mods","Sortie Weapons","Void Parts","Keys","Arcanes"],this.scope.datePicker={format:"yyyy-MM-dd",options:{minDate:new Date,startingDay:1}},this.submitPost=function(){var e=this.scope.newItem.category._id;this.scope.newItem.category.name=e,this.scope.newItem.category.parent=null,this.scope.newItem.category.ancestors=null,o&&console.log(this.scope),t.post("/api/item/new",this.scope.newItem,{headers:{"Content-Type":"application/json"}}).then(function(e){o&&(console.log("newPostController, submitPost success!"),console.log(e)),this.cancelPost()}.bind(this),function(e){o&&(console.log("newPostController, submitPost error!"),console.log(e))})},this.cancelPost=function(){this.scope.cancel()},this.scope.newItem.expiry||(this.scope.newItem.expiry=(new Date).setDate((new Date).getDate()+3)),this.scope.newItem.transaction||(this.scope.newItem.transaction=this.scope.transactions[0]),this.scope.newItem.category||(this.scope.newItem.category={_id:this.scope.categories[0]})}]},{}],11:[function(e,t,o){"use strict";t.exports=["$scope",function(e){e.ctrl=this,this.scope=e}]},{}],12:[function(e,t,o){"use strict";!function r(t){var r=t.module("warframeServices",[]),o=e("./services");for(var n in o)r.service(n,o[n])}(window.angular),t.exports="warframeServices"},{"./services":14}],13:[function(e,t,o){"use strict";t.exports=["$http","$q",function(e,t){var o={};return{getCategory:function(t){return o[t]&&void 0!==o[t].category?o[t].category:e.get("/api/category"+t).then(function(e){return o[t]||(o[t]={}),o[t].category=e.data.category,e.data.category},function(e){return null})},getChildren:function(t){return o[t]&&void 0!==o[t].children?o[t].children:e.get("/api/category/children"+t).then(function(e){return o[t]||(o[t]={}),e.data.children&&0!=e.data.children.length?(o[t].children=e.data.children.map(function(e){return e.name}),o[t].children):(o[t].children=null,null)},function(e){return null})}}}]},{}],14:[function(e,t,o){"use strict";o.userSessionService=e("./userSessionService"),o.itemCategoryService=e("./itemCategoryService")},{"./itemCategoryService":13,"./userSessionService":15}],15:[function(e,t,o){"use strict";t.exports=["$http","$q",function(e,t){return{getUserSession:function(){return e.get("/api/me").then(function(e){return e.data.user},function(e){return null})}}}]},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,
